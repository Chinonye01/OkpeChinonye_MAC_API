{
	"info": {
		"_postman_id": "22c5c9d7-ff4a-416c-8142-80b54ad9e2bd",
		"name": "OkpeChinonye_MAC_API",
		"description": "First API test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "Get all to do entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0975634-10e8-4a75-9157-b6a1dd492bbb",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status code name response is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"    \r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}",
							"host": [
								"{{BaseURL}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a single todo data",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "600d5aee-c780-4f43-b080-4db7bfef4eb1",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body contains title\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"title\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Status code name is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}/? todo id=2",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								""
							],
							"query": [
								{
									"key": " todo id",
									"value": "2"
								}
							]
						},
						"description": "{{BaseURL}}/? todo id=2"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "Create new record in database",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4258f99c-2355-46fd-8798-721156d36cde",
								"exec": [
									"pm.test(\"Status code is 200,201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matched id\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"\r",
									"    pm.test(\"Successful POST request\", function () {\r",
									"        pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"    });\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"});\r",
									"\r",
									"pm.test(\"Status code response has Created\", function () {\r",
									"    pm.response.to.have.status(\"Created\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}",
							"host": [
								"{{URL}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "Delete a user record",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9dacb743-0f36-406f-87e0-eb900349f5a2",
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Length is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Length\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has No Content\", function () {\r",
									"    pm.response.to.have.status(\"No Content\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"2"
							]
						},
						"description": "{{URL}}/2"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "PUT",
			"item": [
				{
					"name": "Update a user record",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f9b743af-a711-4a33-9547-c3566789ed5b",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Body matches updatedAt\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"updatedAt\");\r",
									"});\r",
									"\r",
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"pm.test(\"Status code name has OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{URL}}/2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"2"
							]
						},
						"description": "{{URL}}/2"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}